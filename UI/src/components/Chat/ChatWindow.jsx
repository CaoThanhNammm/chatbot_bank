import React, { useEffect, useRef } from 'react';
import MessageBubble from './MessageBubble';
import TypingIndicator from './TypingIndicator';

const ChatWindow = ({ messages, isTyping }) => {
  const messagesEndRef = useRef(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages, isTyping]);

  return (    <div className="flex-1 overflow-y-auto px-4 py-6 bg-gradient-to-b from-neutral-50 to-white">
      <div className="max-w-4xl mx-auto">
        {/* Welcome message when no messages */}
        {messages.length === 0 && (
          <div className="text-center py-12">
            <div className="w-16 h-16 bg-gradient-to-r from-sage-100 to-ocean-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üè¶</span>
            </div>
            <h2 className="text-2xl font-playfair font-semibold text-neutral-800 mb-2">
              Ch√†o m·ª´ng ƒë·∫øn v·ªõi VietBank AI
            </h2>
            <p className="text-neutral-600 max-w-md mx-auto">
              T√¥i l√† tr·ª£ l√Ω AI c·ªßa VietBank, s·∫µn s√†ng h·ªó tr·ª£ b·∫°n v·ªÅ c√°c d·ªãch v·ª• ng√¢n h√†ng, 
              t∆∞ v·∫•n t√†i ch√≠nh v√† gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc. B·∫°n c·∫ßn h·ªó tr·ª£ g√¨ h√¥m nay?
            </p>
          </div>
        )}
        
        {/* Messages */}
        {messages.map((message) => (
          <MessageBubble
            key={message.id}
            message={message.text}
            isBot={message.isBot}
            timestamp={message.timestamp}
          />
        ))}
        
        {/* Typing indicator */}
        {isTyping && <TypingIndicator />}
        
        {/* Scroll anchor */}
        <div ref={messagesEndRef} />
      </div>
    </div>
  );
};

export default ChatWindow;
